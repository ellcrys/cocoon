syntax = "proto3";
package proto_orderer;

service Orderer {
    rpc CreateLedger(CreateLedgerParams) returns (Ledger);
    rpc GetLedger(GetLedgerParams) returns (Ledger);
    rpc Put(PutTransactionParams) returns (PutResult);
    rpc Get(GetParams) returns (Transaction);
    rpc GetByID(GetParams) returns (Transaction);
    rpc GetBlockByID(GetBlockParams) returns (Block);
    rpc GetRange(GetRangeParams) returns (Transactions);
}

message CreateLedgerParams {
    string cocoonID = 1;
    string name = 2;
    bool public = 3;
    bool chained = 4;
}

message PutTransactionParams {
    string cocoonID = 1;
    string ledgerName = 2;
    repeated Transaction transactions = 3;
}

message GetLedgerParams {
    string cocoonID = 1;
    string name = 2;
}

message GetParams {
    string cocoonID = 1; 
    string ledger = 2;   
    string id = 3;
    string key = 4;
}

message GetBlockParams {
    string cocoonID = 1; 
    string ledger = 2;   
    string id = 3;
}

message GetRangeParams {
    string cocoonID = 1;
    string ledger = 2;
    string startKey = 3;
    string endKey = 4;
    bool inclusive = 5;
    int32 limit = 6;
    int32 offset = 7;
}

message Ledger {
    int64 number = 1;
    string hash = 2;
    string name = 3;
    string nameInternal = 4;
    bool public = 5;
    bool chained = 6;
    int64 createdAt = 7;
}

message Transaction {
    int64 number = 1;
    string ledger = 2;
    string ledgerInternal = 3;
    string id = 4;
    string key = 5;
    string keyInternal = 6;
    string value = 7;
    string hash = 8;
    int64 createdAt = 9;
    string blockId = 10;
    Block block = 11;
}

message Transactions {
    repeated Transaction transactions = 1;
}

message PutResult {
    int32 added = 1;
    Block block = 2;
}

message Block  {
    string id = 1;
    int64 number = 2;
    string chainName = 3;
    string prevBlockHash = 4;
    string hash = 5;
    bytes transactions = 6;
    int64 createdAt = 7; 
}