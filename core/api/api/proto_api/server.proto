syntax = "proto3";
package proto_api;
import "github.com/gogo/protobuf/gogoproto/gogo.proto";


service API {
    rpc Login(LoginRequest) returns (Response);
    rpc CreateCocoon(CocoonReleasePayloadRequest) returns (Response);
    rpc UpdateCocoon(CocoonReleasePayloadRequest) returns (Response);
    rpc GetRelease(GetReleaseRequest) returns (Response);
    rpc CreateIdentity(CreateIdentityRequest) returns (Response);
    rpc Deploy(DeployRequest) returns (Response);
    rpc GetCocoon(GetCocoonRequest) returns (Response);
    rpc GetIdentity(GetIdentityRequest) returns (Response);
    rpc StopCocoon(StopCocoonRequest) returns (Response);
    rpc AddSignatories(AddSignatoriesRequest) returns (Response);
    rpc AddVote(AddVoteRequest) returns (Response);
    rpc RemoveSignatories(RemoveSignatoriesRequest) returns (Response);
    rpc FirewallAllow(FirewallAllowRequest) returns (Response);
    rpc GetLogs(GetLogsRequest) returns (Response);
}

message GetLogsRequest {
    string cocoonID = 1;
    int32 numLines = 2;
    string source = 3;
}

message FirewallAllowRequest {
    string cocoonID = 1;
    string destination = 2;
    string destinationPort = 3;
    string protocol = 4;    
}

message FirewallRule {
    string destination = 1;
    string destinationPort = 2;
    string protocol = 3;
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message AddSignatoriesRequest {
    string cocoonID = 1;
    repeated string IDs = 2;
}

message RemoveSignatoriesRequest {
    string cocoonID = 1;
    repeated string IDs = 2;
}

message AddVoteRequest {
    string releaseID = 1;
    string vote = 2;    
}

message CocoonReleasePayloadRequest {
    string cocoonID = 1                     [(gogoproto.jsontag) = "cocoonID,omitempty", (gogoproto.moretags) = 'structs:"cocoonID,omitempty" mapstructure:"cocoonID,omitempty"']; 
    string URL = 2                          [(gogoproto.jsontag) = "url,omitempty", (gogoproto.moretags) = 'structs:"url,omitempty" mapstructure:"url,omitempty"'];
    string language = 3                     [(gogoproto.jsontag) = "language,omitempty", (gogoproto.moretags) = 'structs:"language,omitempty" mapstructure:"language,omitempty"'];
    string version = 4                      [(gogoproto.jsontag) = "version,omitempty", (gogoproto.moretags) = 'structs:"version,omitempty" mapstructure:"version,omitempty"'];
    string buildParam = 5                   [(gogoproto.jsontag) = "buildParam,omitempty", (gogoproto.moretags) = 'structs:"buildParam,omitempty" mapstructure:"buildParam,omitempty"'];
    repeated FirewallRule firewall = 6      [(gogoproto.jsontag) = "firewall,omitempty", (gogoproto.moretags) = 'structs:"firewall,omitempty" mapstructure:"firewall,omitempty"'];
    bytes ACL = 7                           [(gogoproto.jsontag) = "acl,omitempty", (gogoproto.moretags) = 'structs:"acl,omitempty" mapstructure:"acl,omitempty"'];
    int32 memory = 8                        [(gogoproto.jsontag) = "memory,omitempty", (gogoproto.moretags) = 'structs:"memory,omitempty" mapstructure:"memory,omitempty"'];
    int32 CPUShare = 9                      [(gogoproto.jsontag) = "CPUShare,omitempty", (gogoproto.moretags) = 'structs:"CPUShare,omitempty" mapstructure:"CPUShare,omitempty"'];
    string link = 10                        [(gogoproto.jsontag) = "link,omitempty", (gogoproto.moretags) = 'structs:"link,omitempty" mapstructure:"link,omitempty"'];
    int32 numSignatories = 11               [(gogoproto.jsontag) = "numSignatories,omitempty", (gogoproto.moretags) = 'structs:"numSignatories,omitempty" mapstructure:"numSignatories,omitempty"'];
    int32 sigThreshold = 12                 [(gogoproto.jsontag) = "sigThreshold,omitempty", (gogoproto.moretags) = 'structs:"sigThreshold,omitempty" mapstructure:"sigThreshold,omitempty"'];
    map<string,string> env = 13             [(gogoproto.jsontag) = "env,omitempty", (gogoproto.moretags) = 'structs:"env,omitempty" mapstructure:"env,omitempty"'];
}

message GetCocoonRequest {
    string ID = 1   [(gogoproto.jsontag) = "id", (gogoproto.moretags) = 'structs:"id,omitempty" mapstructure:"id,omitempty"'];
}

message GetIdentityRequest {
    string email = 1;
    string ID = 2 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = 'structs:"id,omitempty" mapstructure:"id,omitempty"'];
}

message GetReleaseRequest {
    string ID = 1;
}

message DeployRequest {
    string cocoonID = 1;
    bool useLastDeployedReleaseID = 2; 
}

message CreateIdentityRequest {
    string email = 1;
    string password = 2;
}

message StopCocoonRequest {
    string ID = 1          [(gogoproto.jsontag) = "id", (gogoproto.moretags) = 'structs:"id,omitempty" mapstructure:"id,omitempty"'];
}

message Response {
    int32 status = 1;
    bytes body = 2;
}
