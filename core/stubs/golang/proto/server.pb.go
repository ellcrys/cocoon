// Code generated by protoc-gen-go.
// source: server.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	server.proto

It has these top-level messages:
	Tx
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Tx represent an invoke transaction or a response transaction.
// An invoke transaction sets `invoke` field to true and the `response` field
// to false and vice versa for a response transaction. The `name` field is used
// to differentiate the kind of transactions.
type Tx struct {
	Invoke   bool     `protobuf:"varint,1,opt,name=invoke" json:"invoke,omitempty"`
	Response bool     `protobuf:"varint,2,opt,name=response" json:"response,omitempty"`
	Name     string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Params   []string `protobuf:"bytes,4,rep,name=params" json:"params,omitempty"`
}

func (m *Tx) Reset()                    { *m = Tx{} }
func (m *Tx) String() string            { return proto1.CompactTextString(m) }
func (*Tx) ProtoMessage()               {}
func (*Tx) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Tx) GetInvoke() bool {
	if m != nil {
		return m.Invoke
	}
	return false
}

func (m *Tx) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

func (m *Tx) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tx) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func init() {
	proto1.RegisterType((*Tx)(nil), "proto.Tx")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Stub service

type StubClient interface {
	Transact(ctx context.Context, opts ...grpc.CallOption) (Stub_TransactClient, error)
}

type stubClient struct {
	cc *grpc.ClientConn
}

func NewStubClient(cc *grpc.ClientConn) StubClient {
	return &stubClient{cc}
}

func (c *stubClient) Transact(ctx context.Context, opts ...grpc.CallOption) (Stub_TransactClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Stub_serviceDesc.Streams[0], c.cc, "/proto.Stub/Transact", opts...)
	if err != nil {
		return nil, err
	}
	x := &stubTransactClient{stream}
	return x, nil
}

type Stub_TransactClient interface {
	Send(*Tx) error
	Recv() (*Tx, error)
	grpc.ClientStream
}

type stubTransactClient struct {
	grpc.ClientStream
}

func (x *stubTransactClient) Send(m *Tx) error {
	return x.ClientStream.SendMsg(m)
}

func (x *stubTransactClient) Recv() (*Tx, error) {
	m := new(Tx)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Stub service

type StubServer interface {
	Transact(Stub_TransactServer) error
}

func RegisterStubServer(s *grpc.Server, srv StubServer) {
	s.RegisterService(&_Stub_serviceDesc, srv)
}

func _Stub_Transact_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StubServer).Transact(&stubTransactServer{stream})
}

type Stub_TransactServer interface {
	Send(*Tx) error
	Recv() (*Tx, error)
	grpc.ServerStream
}

type stubTransactServer struct {
	grpc.ServerStream
}

func (x *stubTransactServer) Send(m *Tx) error {
	return x.ServerStream.SendMsg(m)
}

func (x *stubTransactServer) Recv() (*Tx, error) {
	m := new(Tx)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Stub_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Stub",
	HandlerType: (*StubServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Transact",
			Handler:       _Stub_Transact_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "server.proto",
}

func init() { proto1.RegisterFile("server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x29, 0x5c, 0x4c,
	0x21, 0x15, 0x42, 0x62, 0x5c, 0x6c, 0x99, 0x79, 0x65, 0xf9, 0xd9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0x1c, 0x41, 0x50, 0x9e, 0x90, 0x14, 0x17, 0x47, 0x51, 0x6a, 0x71, 0x41, 0x7e, 0x5e, 0x71,
	0xaa, 0x04, 0x13, 0x58, 0x06, 0xce, 0x17, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60,
	0x56, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x41, 0xe6, 0x14, 0x24, 0x16, 0x25, 0xe6, 0x16, 0x4b,
	0xb0, 0x28, 0x30, 0x6b, 0x70, 0x06, 0x41, 0x79, 0x46, 0x3a, 0x5c, 0x2c, 0xc1, 0x25, 0xa5, 0x49,
	0x42, 0x2a, 0x5c, 0x1c, 0x21, 0x45, 0x89, 0x79, 0xc5, 0x89, 0xc9, 0x25, 0x42, 0x9c, 0x10, 0x87,
	0xe8, 0x85, 0x54, 0x48, 0x21, 0x98, 0x1a, 0x8c, 0x06, 0x8c, 0x49, 0x6c, 0x60, 0x9e, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x1a, 0xb4, 0x37, 0xf7, 0xb1, 0x00, 0x00, 0x00,
}
